<div class="card h-100 p-0 radius-12">
    <div class="card-body p-24">
        <div class="row justify-content-center">
            <div class="col-xxl-6 col-xl-8 col-lg-10">
                <div class="card border">
                    <div class="card-body">
                        <h6 class="text-md text-primary-light mb-16">Profile Image</h6>

                        <!-- Upload Image Start -->
                        <div class="mb-24 mt-16">
                            <div class="avatar-upload">
                                <div class="avatar-edit position-absolute bottom-0 end-0 me-24 mt-16 z-1 cursor-pointer">
                                    <input type='file' id="imageUpload" accept=".png, .jpg, .jpeg" hidden>
                                    <label for="imageUpload" class="w-32-px h-32-px d-flex justify-content-center align-items-center bg-primary-50 text-primary-600 border border-primary-600 bg-hover-primary-100 text-lg rounded-circle">
                                        <iconify-icon icon="solar:camera-outline" class="icon"></iconify-icon>
                                    </label>
                                </div>
                                <div class="avatar-preview">
                                    <div id="imagePreview"> </div>
                                </div>
                            </div>
                        </div>
                        <!-- Upload Image End -->

                        <form id="addUserForm">
                            <div class="mb-20">
                                <label for="fullName" class="form-label fw-semibold text-primary-light text-sm mb-8">Full Name <span class="text-danger-600">*</span></label>
                                <input type="text" class="form-control radius-8" id="fullName" name="fullName" placeholder="Enter Full Name" required>
                                <div class="invalid-feedback"></div>
                            </div>
                            <div class="mb-20">
                                <label for="email" class="form-label fw-semibold text-primary-light text-sm mb-8">Email <span class="text-danger-600">*</span></label>
                                <input type="email" class="form-control radius-8" id="email" name="email" placeholder="Enter email address" required>
                                <div class="invalid-feedback"></div>
                            </div>
                            <div class="mb-20">
                                <label for="password" class="form-label fw-semibold text-primary-light text-sm mb-8">Password <span class="text-danger-600">*</span></label>
                                <input type="password" class="form-control radius-8" id="password" name="password" placeholder="Enter password" required>
                                <small class="text-muted">Must be at least 8 characters with uppercase, lowercase, number, and special character</small>
                                <div class="invalid-feedback"></div>
                            </div>
                            <div class="mb-20">
                                <label for="confirmPassword" class="form-label fw-semibold text-primary-light text-sm mb-8">Confirm Password <span class="text-danger-600">*</span></label>
                                <input type="password" class="form-control radius-8" id="confirmPassword" name="confirmPassword" placeholder="Confirm password" required>
                                <div class="invalid-feedback"></div>
                            </div>
                            <div class="mb-20">
                                <label for="phone" class="form-label fw-semibold text-primary-light text-sm mb-8">Phone <span class="text-danger-600">*</span></label>
                                <input type="tel" class="form-control radius-8" id="phone" name="phone" placeholder="Enter phone number" maxlength="15" pattern="[0-9+\-\s()]{1,15}" required>
                                <small class="text-muted">Maximum 15 digits</small>
                                <div class="invalid-feedback"></div>
                            </div>
                            <div class="mb-20">
                                <label for="role" class="form-label fw-semibold text-primary-light text-sm mb-8">Role <span class="text-danger-600">*</span></label>
                                <select class="form-control radius-8 form-select" id="role" name="role" required>
                                    <option value="">Select Role</option>
                                    <% if (typeof roles !== 'undefined' && roles.length > 0) { %>
                                        <% roles.forEach(role => { %>
                                            <option value="<%= role._id %>"><%= role.name %></option>
                                        <% }); %>
                                    <% } %>
                                </select>
                                <div class="invalid-feedback"></div>
                            </div>
                            <div class="mb-20">
                                <label for="department" class="form-label fw-semibold text-primary-light text-sm mb-8">Department</label>
                                <select class="form-control radius-8 form-select" id="department" name="department">
                                    <option value="">Select Department</option>
                                    <option value="Sales">Sales</option>
                                    <option value="Marketing">Marketing</option>
                                    <option value="IT">IT</option>
                                    <option value="HR">HR</option>
                                    <option value="Finance">Finance</option>
                                    <option value="Operations">Operations</option>
                                    <option value="Support">Support</option>
                                    <option value="Management">Management</option>
                                </select>
                                <div class="invalid-feedback"></div>
                            </div>
                            <div class="mb-20">
                                <label for="designation" class="form-label fw-semibold text-primary-light text-sm mb-8">Designation</label>
                                <input type="text" class="form-control radius-8" id="designation" name="designation" placeholder="Enter designation">
                                <div class="invalid-feedback"></div>
                            </div>
                            <div class="mb-20">
                                <label for="description" class="form-label fw-semibold text-primary-light text-sm mb-8">Description</label>
                                <textarea name="description" class="form-control radius-8" id="description" placeholder="Write description..." rows="3"></textarea>
                                <div class="invalid-feedback"></div>
                            </div>

                            <!-- Custom Permissions Section -->
                            <div class="mb-20">
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <label class="form-label fw-semibold text-primary-light text-sm mb-0">Additional Permissions (Optional)</label>
                                    <small class="text-muted">These will be added to the role's permissions</small>
                                </div>

                                <% if (typeof groupedPermissions !== 'undefined' && Object.keys(groupedPermissions).length > 0) { %>
                                    <div class="accordion" id="permissionsAccordion">
                                        <% Object.keys(groupedPermissions).forEach((module, index) => { %>
                                            <div class="accordion-item">
                                                <h2 class="accordion-header" id="heading<%= index %>">
                                                    <button class="accordion-button <%= index !== 0 ? 'collapsed' : '' %>" type="button" data-bs-toggle="collapse" data-bs-target="#collapse<%= index %>" aria-expanded="<%= index === 0 ? 'true' : 'false' %>" aria-controls="collapse<%= index %>">
                                                        <strong class="text-capitalize"><%= module.replace('-', ' ') %></strong>
                                                    </button>
                                                </h2>
                                                <div id="collapse<%= index %>" class="accordion-collapse collapse <%= index === 0 ? 'show' : '' %>" aria-labelledby="heading<%= index %>" data-bs-parent="#permissionsAccordion">
                                                    <div class="accordion-body">
                                                        <div class="row">
                                                            <% groupedPermissions[module].forEach(permission => { %>
                                                                <div class="col-md-6 col-lg-4 mb-2">
                                                                    <div class="form-check">
                                                                        <input class="form-check-input" type="checkbox" name="customPermissions[]" value="<%= permission.slug %>" id="perm_<%= permission._id %>">
                                                                        <label class="form-check-label" for="perm_<%= permission._id %>">
                                                                            <%= permission.name %>
                                                                        </label>
                                                                    </div>
                                                                </div>
                                                            <% }); %>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        <% }); %>
                                    </div>
                                <% } else { %>
                                    <div class="alert alert-info">
                                        <strong>Note:</strong> Please seed the database first to see available permissions. Run: <code>npm run seed</code>
                                    </div>
                                <% } %>
                            </div>

                            <div class="d-flex align-items-center justify-content-center gap-3">
                                <button type="button" class="border border-danger-600 bg-hover-danger-200 text-danger-600 text-md px-56 py-11 radius-8" onclick="window.history.back()">
                                    Cancel
                                </button>
                                <button type="submit" class="btn btn-primary border border-primary-600 text-md px-56 py-12 radius-8">
                                    <span class="btn-text">Save User</span>
                                    <span class="btn-spinner d-none">
                                        <span class="spinner-border spinner-border-sm" role="status"></span>
                                    </span>
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<% script = `
    <script src='/js/user-management.js'></script>
    <script>
        // Phone number validation
        function validatePhone(input) {
            let value = input.value;
            // Remove any non-digit, non-plus, non-minus, non-space, non-parentheses characters
            value = value.replace(/[^0-9+\-\s()]/g, '');
            
            // Limit to 15 characters
            if (value.length > 15) {
                value = value.substring(0, 15);
                showToast('Phone number cannot exceed 15 characters', 'warning');
            }
            
            input.value = value;
            
            // Show warning if at limit
            if (value.length >= 15) {
                input.classList.add('border-warning');
            } else {
                input.classList.remove('border-warning');
            }
        }

        const phoneInput = document.getElementById('phone');
        
        phoneInput.addEventListener('input', function(e) {
            validatePhone(e.target);
        });
        
        phoneInput.addEventListener('paste', function(e) {
            setTimeout(() => validatePhone(e.target), 10);
        });

        // Prevent typing beyond 15 characters
        let lastToastTime = 0;
        document.getElementById('phone').addEventListener('keydown', function(e) {
            const value = e.target.value;
            // Allow: backspace, delete, tab, escape, enter, arrows
            if ([8, 9, 27, 13, 46, 37, 38, 39, 40].indexOf(e.keyCode) !== -1 ||
                // Allow: Ctrl+A, Ctrl+C, Ctrl+V, Ctrl+X
                (e.keyCode === 65 && e.ctrlKey === true) ||
                (e.keyCode === 67 && e.ctrlKey === true) ||
                (e.keyCode === 86 && e.ctrlKey === true) ||
                (e.keyCode === 88 && e.ctrlKey === true)) {
                return;
            }
            // Prevent if already at 15 characters
            if (value.length >= 15 && e.target.selectionStart === e.target.selectionEnd) {
                e.preventDefault();
                
                // Show toast notification (throttled to once per 2 seconds)
                const now = Date.now();
                if (now - lastToastTime > 2000) {
                    showToast('Phone number cannot exceed 15 characters', 'warning');
                    lastToastTime = now;
                }
            }
        });
    </script>
` %>
