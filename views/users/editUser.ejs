<div class="card p-0 radius-12">
    <div class="card-header border-bottom bg-base py-16 px-24 d-flex align-items-center justify-content-between">
        <h6 class="text-lg fw-semibold mb-0">Edit User</h6>
        <a href="/roles/roles-management" class="btn btn-outline-primary btn-sm">
            <i class="ri-arrow-left-line me-1"></i> Back to Users
        </a>
    </div>
    <div class="card-body p-24">
        <div class="row ">
            <div class="col-lg-12">
                <form id="editUserForm">
                    <input type="hidden" name="userId" value="<%= user._id %>">

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-20">
                                <label for="fullName" class="form-label fw-semibold text-primary-light text-sm mb-8">Full Name <span class="text-danger-600">*</span></label>
                                <input type="text" class="form-control radius-8" id="fullName" name="fullName" value="<%= user.fullName %>" placeholder="Enter Full Name" required>
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-20">
                                <label for="email" class="form-label fw-semibold text-primary-light text-sm mb-8">Email <span class="text-danger-600">*</span></label>
                                <input type="email" class="form-control radius-8" id="email" name="email" value="<%= user.email %>" placeholder="Enter email address" required>
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-20">
                                <label for="phone" class="form-label fw-semibold text-primary-light text-sm mb-8">Phone</label>
                                <input type="tel" class="form-control radius-8" id="phone" name="phone" value="<%= user.phone || '' %>" placeholder="Enter phone number" maxlength="15" pattern="[0-9+\-\s()]{1,15}">
                                <small class="text-muted">Maximum 15 digits</small>
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-20">
                                <label for="role" class="form-label fw-semibold text-primary-light text-sm mb-8">Select Role <span class="text-danger-600">*</span></label>
                                <select class="form-control radius-8" id="role" name="role" required>
                                    <option value="">Select Role</option>
                                    <% roles.forEach(role => { %>
                                        <option value="<%= role._id %>" <%= user.role && user.role._id.toString() === role._id.toString() ? 'selected' : '' %>>
                                            <%= role.name %>
                                        </option>
                                    <% }); %>
                                </select>
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                    </div>

                    <!-- Password Change Section -->
                    <div class="row">
                        <div class="col-12">
                            <div class="mb-20">
                                <div class="password-reset-card">
                                    <div class="d-flex align-items-center justify-content-between">
                                        <div class="d-flex align-items-center gap-3">
                                            <div class="password-icon-wrapper">
                                                <iconify-icon icon="solar:lock-password-bold" class="text-white"></iconify-icon>
                                            </div>
                                            <div>
                                                <h6 style="font-size: 16px !important; " class="mb-1 fw-semibold text-neutral-900">Reset User Password</h6>
                                                <p style="font-size: 14px;" class="mb-0 text-sm text-neutral-600">Enable this option to set a new password for this user account</p>
                                            </div>
                                        </div>
                                        <label class="custom-toggle-switch">
                                            <input type="checkbox" id="changePasswordToggle" onchange="togglePasswordFields()">
                                            <span class="toggle-slider"></span>
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div id="passwordFields" class="row" style="display: none;">
                        <div class="col-md-6">
                            <div class="mb-20">
                                <label for="newPassword" class="form-label fw-semibold text-primary-light text-sm mb-8">New Password</label>
                                <div class="position-relative">
                                    <input type="password" class="form-control radius-8" id="newPassword" name="newPassword" placeholder="Enter new password" minlength="6">
                                    <span class="position-absolute top-50 end-0 translate-middle-y me-3 cursor-pointer" onclick="togglePasswordVisibility('newPassword')">
                                        <i class="ri-eye-line" id="newPassword-icon"></i>
                                    </span>
                                </div>
                                <small class="text-muted">Minimum 6 characters</small>
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-20">
                                <label for="confirmPassword" class="form-label fw-semibold text-primary-light text-sm mb-8">Confirm Password</label>
                                <div class="position-relative">
                                    <input type="password" class="form-control radius-8" id="confirmPassword" name="confirmPassword" placeholder="Confirm new password">
                                    <span class="position-absolute top-50 end-0 translate-middle-y me-3 cursor-pointer" onclick="togglePasswordVisibility('confirmPassword')">
                                        <i class="ri-eye-line" id="confirmPassword-icon"></i>
                                    </span>
                                </div>
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                    </div>

                    <div class="mb-20">

                            <label class="form-label fw-semibold text-primary-light text-sm mb-8">User Status</label>
                            <div class="d-flex align-items-center gap-3">
                                <div class="form-check custom-form-check">
                                    <input class="form-check-input" type="radio" name="isActive" id="statusActive" value="true" <%= user.isActive ? 'checked' : '' %>>
                                    <label class="form-check-label" for="statusActive">
                                        <span class="">
                                            <!-- <i class="ri-check-line me-1"></i>  -->
                                            Active
                                        </span>
                                    </label>
                                </div>
                                <div class="form-check custom-form-check">
                                    <input class="form-check-input" type="radio" name="isActive" id="statusInactive" value="false" <%= !user.isActive ? 'checked' : '' %>>
                                    <label class="form-check-label" for="statusInactive">
                                        <span class="">
                                            <!-- <i class="ri-close-line me-1"></i>  -->
                                            Inactive
                                        </span>
                                    </label>
                                </div>
                            </div>

                    </div>

                    <!-- Sidebar Access Permissions Section -->
                    <div class="mb-20">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <label class="form-label fw-semibold text-primary-light text-sm mb-0">Sidebar Access Permissions</label>
                            <div class="permission-actions">
                                <button type="button" class="btn btn-sm btn-primary" onclick="selectAllPermissions()">
                                    <i class="ri-checkbox-multiple-line me-1"></i> Select All
                                </button>
                                <button type="button" class="btn btn-sm btn-outline-secondary" onclick="deselectAllPermissions()">
                                    <i class="ri-checkbox-blank-line me-1"></i> Deselect All
                                </button>
                            </div>
                        </div>

                        <div class="permissions-container">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="permission-card">
                                        <label class="permission-checkbox">
                                            <input type="checkbox" name="customPermissions[]" value="dashboard" id="perm_dashboard" <%= user.customPermissions && user.customPermissions.includes('dashboard') ? 'checked' : '' %>>
                                            <span class="checkmark"></span>
                                            <span class="permission-label">Dashboard</span>
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="permission-card">
                                        <label class="permission-checkbox">
                                            <input type="checkbox" name="customPermissions[]" value="users" id="perm_users" <%= user.customPermissions && user.customPermissions.includes('users') ? 'checked' : '' %>>
                                            <span class="checkmark"></span>
                                            <span class="permission-label">Users Management</span>
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="permission-card">
                                        <label class="permission-checkbox">
                                            <input type="checkbox" name="customPermissions[]" value="cms" id="perm_cms" <%= user.customPermissions && user.customPermissions.includes('cms') ? 'checked' : '' %>>
                                            <span class="checkmark"></span>
                                            <span class="permission-label">Website Page Master</span>
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="permission-card">
                                        <label class="permission-checkbox">
                                            <input type="checkbox" name="customPermissions[]" value="content" id="perm_content" <%= user.customPermissions && user.customPermissions.includes('content') ? 'checked' : '' %>>
                                            <span class="checkmark"></span>
                                            <span class="permission-label">Content Management</span>
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="permission-card">
                                        <label class="permission-checkbox">
                                            <input type="checkbox" name="customPermissions[]" value="menu" id="perm_menu" <%= user.customPermissions && user.customPermissions.includes('menu') ? 'checked' : '' %>>
                                            <span class="checkmark"></span>
                                            <span class="permission-label">Menu Management</span>
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="permission-card">
                                        <label class="permission-checkbox">
                                            <input type="checkbox" name="customPermissions[]" value="media" id="perm_media" <%= user.customPermissions && user.customPermissions.includes('media') ? 'checked' : '' %>>
                                            <span class="checkmark"></span>
                                            <span class="permission-label">Media</span>
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="permission-card">
                                        <label class="permission-checkbox">
                                            <input type="checkbox" name="customPermissions[]" value="seo" id="perm_seo" <%= user.customPermissions && user.customPermissions.includes('seo') ? 'checked' : '' %>>
                                            <span class="checkmark"></span>
                                            <span class="permission-label">SEO Management</span>
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="permission-card">
                                        <label class="permission-checkbox">
                                            <input type="checkbox" name="customPermissions[]" value="ads" id="perm_ads" <%= user.customPermissions && user.customPermissions.includes('ads') ? 'checked' : '' %>>
                                            <span class="checkmark"></span>
                                            <span class="permission-label">Ads Management</span>
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="permission-card">
                                        <label class="permission-checkbox">
                                            <input type="checkbox" name="customPermissions[]" value="leads" id="perm_leads" <%= user.customPermissions && user.customPermissions.includes('leads') ? 'checked' : '' %>>
                                            <span class="checkmark"></span>
                                            <span class="permission-label">Leads Management</span>
                                        </label>
                                    </div>
                                </div>
                                <!-- <div class="col-md-6">
                                    <div class="permission-card">
                                        <label class="permission-checkbox">
                                            <input type="checkbox" name="customPermissions[]" value="blog" id="perm_blog" <%= user.customPermissions && user.customPermissions.includes('blog') ? 'checked' : '' %>>
                                            <span class="checkmark"></span>
                                            <span class="permission-label">Resources & Publications</span>
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="permission-card">
                                        <label class="permission-checkbox">
                                            <input type="checkbox" name="customPermissions[]" value="subscribers" id="perm_subscribers" <%= user.customPermissions && user.customPermissions.includes('subscribers') ? 'checked' : '' %>>
                                            <span class="checkmark"></span>
                                            <span class="permission-label">Subscribed Users</span>
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="permission-card">
                                        <label class="permission-checkbox">
                                            <input type="checkbox" name="customPermissions[]" value="events" id="perm_events" <%= user.customPermissions && user.customPermissions.includes('events') ? 'checked' : '' %>>
                                            <span class="checkmark"></span>
                                            <span class="permission-label">Events Management</span>
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="permission-card">
                                        <label class="permission-checkbox">
                                            <input type="checkbox" name="customPermissions[]" value="forms" id="perm_forms" <%= user.customPermissions && user.customPermissions.includes('forms') ? 'checked' : '' %>>
                                            <span class="checkmark"></span>
                                            <span class="permission-label">Forms & Enquiries</span>
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="permission-card">
                                        <label class="permission-checkbox">
                                            <input type="checkbox" name="customPermissions[]" value="reports" id="perm_reports" <%= user.customPermissions && user.customPermissions.includes('reports') ? 'checked' : '' %>>
                                            <span class="checkmark"></span>
                                            <span class="permission-label">Reports & Analytics</span>
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="permission-card">
                                        <label class="permission-checkbox">
                                            <input type="checkbox" name="customPermissions[]" value="settings" id="perm_settings" <%= user.customPermissions && user.customPermissions.includes('settings') ? 'checked' : '' %>>
                                            <span class="checkmark"></span>
                                            <span class="permission-label">Site Settings</span>
                                        </label>
                                    </div>
                                </div> -->
                            </div>
                        </div>
                    </div>

                    <div class="mb-20">
                        <div class="user-info-box">
                        <h6 class="text-md text-primary-light mb-16">User Information</h6>
                        <div class="row">
                            <div class="col-md-6">
                                <p class="text-sm text-secondary-light mb-2">
                                    <strong>Created:</strong> <%= new Date(user.createdAt).toLocaleDateString() %>
                                </p>
                                <% if (user.createdBy) { %>
                                    <p class="text-sm text-secondary-light mb-2">
                                        <strong>Created By:</strong> <%= user.createdBy.fullName %>
                                    </p>
                                <% } %>
                            </div>
                            <div class="col-md-6">
                                <p class="text-sm text-secondary-light mb-2">
                                    <strong>Last Updated:</strong> <%= new Date(user.updatedAt).toLocaleDateString() %>
                                </p>
                                <p class="text-sm text-secondary-light mb-2">
                                    <strong>Current Role:</strong>
                                    <% if (user.role) { %>
                                        <span class="">
                                            <%= user.role.name %>
                                        </span>
                                    <% } else { %>
                                        <span class="">
                                            No Role
                                        </span>
                                    <% } %>
                                </p>
                            </div>
                        </div>
                        </div>
                    </div>

                    <div class="d-flex align-items-center justify-content-end gap-3 mt-4 pt-3 border-top">
                        <a href="/roles/roles-management" class="btn btn-sm btn-outline-secondary">
                            <!-- <i class="ri-close-line me-1"></i>  -->
                            Cancel
                        </a>
                        <button type="button" class="btn btn-sm btn-primary-600 " onclick="updateUser()">
                            <span class="btn-text">
                                <!-- <i class="ri-save-line me-1"></i>  -->
                                Update User
                            </span>
                            <span class="btn-spinner d-none">
                                <span class="spinner-border spinner-border-sm" role="status"></span>
                            </span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- SweetAlert2 CSS and JS -->
<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.32/dist/sweetalert2.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.32/dist/sweetalert2.all.min.js"></script>

<style>
    .permission-card {
        border: 1px solid #e5e7eb;
        border-radius: 8px;
        padding: 12px;
        margin-bottom: 10px;
        background: #f9fafb;
        transition: all 0.2s ease;
    }

    .permission-card:hover {
        border-color: #d1d5db;
        background: #f3f4f6;
    }

    .permission-checkbox {
        display: flex;
        align-items: center;
        cursor: pointer;
        margin: 0;
    }

    .permission-checkbox input[type="checkbox"] {
        margin-right: 8px;
        transform: scale(1.1);
        cursor: pointer;
    }

    .permission-label {
        font-weight: 500;
        color: #374151;
        user-select: none;
    }

    .permission-checkbox input[type="checkbox"]:checked + .checkmark + .permission-label {
        color: #dc3545;
    }

    .permissions-container .row {
        margin: 0;
    }

    .permissions-container .col-md-6,
    .permissions-container .col-lg-4 {
        padding: 5px;
    }

    .cursor-pointer {
        cursor: pointer;
    }

    .form-check-input:checked {
        background-color: #dc3545;
        border-color: #dc3545;
    }

    /* Password Reset Card Styling */
    .password-reset-card {
        background: linear-gradient(135deg, #fff5f5 0%, #ffffff 100%);
        border: 2px solid #fecaca;
        border-radius: 12px;
        padding: 10px;
        transition: all 0.3s ease;
        box-shadow: 0 2px 4px rgba(220, 53, 69, 0.08);
    }

    .password-reset-card:hover {
        border-color: #fca5a5;
        box-shadow: 0 4px 12px rgba(220, 53, 69, 0.15);
        transform: translateY(-2px);
    }

    .password-icon-wrapper {
        width: 38px;
        height: 38px;
        background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 4px 8px rgba(220, 53, 69, 0.3);
        flex-shrink: 0;
    }

    .password-icon-wrapper iconify-icon {
        font-size: 24px;
    }

    /* Custom iOS-style Toggle Switch */
    .custom-toggle-switch {
        position: relative;
        display: inline-block;
        width: 50px;
        height: 25px;
        cursor: pointer;
        flex-shrink: 0;
    }

    .custom-toggle-switch input {
        opacity: 0;
        width: 0;
        height: 0;
    }

    .toggle-slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(180deg, #e0e0e0 0%, #d0d0d0 100%);
        border-radius: 34px;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .toggle-slider:before {
        position: absolute;
        content: "";
        height: 20px;
        width: 20px;
        left: 3px;
        bottom: 3px;
        background: linear-gradient(180deg, #ffffff 0%, #f5f5f5 100%);
        border-radius: 50%;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2), 0 1px 2px rgba(0, 0, 0, 0.1);
    }

    .custom-toggle-switch input:checked + .toggle-slider {
        background: linear-gradient(180deg, #dc3545 0%, #c82333 100%);
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.15), 0 0 0 2px rgba(220, 53, 69, 0.1);
    }

    .custom-toggle-switch input:checked + .toggle-slider:before {
        transform: translateX(24px);
        box-shadow: 0 3px 8px rgba(0, 0, 0, 0.3), 0 1px 3px rgba(0, 0, 0, 0.15);
    }

    .custom-toggle-switch:hover .toggle-slider {
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.15), 0 0 8px rgba(0, 0, 0, 0.1);
    }

    .custom-toggle-switch input:focus + .toggle-slider {
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1), 0 0 0 3px rgba(220, 53, 69, 0.2);
    }

    .custom-toggle-switch input:checked:focus + .toggle-slider {
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.15), 0 0 0 3px rgba(220, 53, 69, 0.3);
    }
</style>

<script>
// Toggle password fields visibility
function togglePasswordFields() {
    const passwordFields = document.getElementById('passwordFields');
    const toggle = document.getElementById('changePasswordToggle');
    const newPassword = document.getElementById('newPassword');
    const confirmPassword = document.getElementById('confirmPassword');

    if (toggle.checked) {
        passwordFields.style.display = 'flex';
        newPassword.setAttribute('required', 'required');
        confirmPassword.setAttribute('required', 'required');
    } else {
        passwordFields.style.display = 'none';
        newPassword.removeAttribute('required');
        confirmPassword.removeAttribute('required');
        newPassword.value = '';
        confirmPassword.value = '';
    }
}

// Toggle password visibility
function togglePasswordVisibility(fieldId) {
    const field = document.getElementById(fieldId);
    const icon = document.getElementById(fieldId + '-icon');

    if (field.type === 'password') {
        field.type = 'text';
        icon.classList.remove('ri-eye-line');
        icon.classList.add('ri-eye-off-line');
    } else {
        field.type = 'password';
        icon.classList.remove('ri-eye-off-line');
        icon.classList.add('ri-eye-line');
    }
}

// Select/Deselect all permissions
function selectAllPermissions() {
    const checkboxes = document.querySelectorAll('input[name="customPermissions[]"]');
    checkboxes.forEach(cb => {
        cb.checked = true;
    });
}

function deselectAllPermissions() {
    const checkboxes = document.querySelectorAll('input[name="customPermissions[]"]');
    checkboxes.forEach(cb => {
        cb.checked = false;
    });
}

// Custom toast notification function
function showToast(message, type = 'info') {
    // Remove any existing toasts first
    const existingToasts = document.querySelectorAll('.custom-toast');
    existingToasts.forEach(toast => toast.remove());

    // Create toast element
    const toast = document.createElement('div');
    const alertType = type === 'error' ? 'danger' : type === 'success' ? 'success' : 'info';
    toast.className = 'alert alert-' + alertType + ' position-fixed shadow-lg custom-toast';
    toast.style.cssText = 'top: 80px; right: 20px; z-index: 999999; min-width: 400px; max-width: 600px; border-radius: 12px; font-size: 16px; padding: 20px; border: 2px solid;';

    // Set border color based on type
    if (type === 'success') {
        toast.style.borderColor = '#28a745';
        toast.style.backgroundColor = '#d4edda';
        toast.style.color = '#155724';
    } else if (type === 'error') {
        toast.style.borderColor = '#dc3545';
        toast.style.backgroundColor = '#f8d7da';
        toast.style.color = '#721c24';
    }

    const iconEmoji = type === 'error' ? '❌' : type === 'success' ? '✅' : 'ℹ️';
    toast.innerHTML = '<div class="d-flex align-items-center">' +
        '<span style="font-size: 24px; margin-right: 12px;">' + iconEmoji + '</span>' +
        '<span style="font-weight: 600; flex-grow: 1;">' + message + '</span>' +
        '<button type="button" style="background: none; border: none; font-size: 20px; cursor: pointer; margin-left: 10px;" onclick="this.parentElement.parentElement.remove()">×</button>' +
        '</div>';

    document.body.appendChild(toast);

    // Add entrance animation
    toast.style.transform = 'translateX(100%)';
    toast.style.transition = 'transform 0.3s ease-out';
    setTimeout(() => {
        toast.style.transform = 'translateX(0)';
    }, 10);

    // Auto remove after duration based on type
    const duration = type === 'success' ? 4000 : 6000;
    setTimeout(() => {
        if (toast.parentElement) {
            toast.style.transform = 'translateX(100%)';
            setTimeout(() => toast.remove(), 300);
        }
    }, duration);
}

// Update user function
async function updateUser() {
    const form = document.getElementById('editUserForm');
    const formData = new FormData(form);

    // Collect custom permissions
    const customPermissions = [];
    const permissionCheckboxes = document.querySelectorAll('input[name="customPermissions[]"]:checked');
    permissionCheckboxes.forEach(checkbox => {
        customPermissions.push(checkbox.value);
    });

    // Get form values
    const userData = {
        fullName: formData.get('fullName'),
        email: formData.get('email'),
        phone: formData.get('phone'),
        role: formData.get('role'),
        isActive: formData.get('isActive') === 'true',
        customPermissions: customPermissions
    };

    const userId = formData.get('userId');

    // Check if password change is enabled
    const changePasswordToggle = document.getElementById('changePasswordToggle');
    if (changePasswordToggle.checked) {
        const newPassword = formData.get('newPassword');
        const confirmPassword = formData.get('confirmPassword');

        // Password validation
        if (!newPassword || newPassword.trim().length < 6) {
            showToast('Password must be at least 6 characters long', 'error');
            return;
        }

        if (newPassword !== confirmPassword) {
            showToast('Passwords do not match', 'error');
            return;
        }

        // Add password to userData
        userData.password = newPassword;
    }

    // Basic validation
    if (!userData.fullName || userData.fullName.trim().length < 2) {
        showToast('Full name must be at least 2 characters long', 'error');
        return;
    }

    if (!userData.email || !userData.email.includes('@')) {
        showToast('Please enter a valid email address', 'error');
        return;
    }

    if (!userData.role) {
        showToast('Please select a role', 'error');
        return;
    }

    // Show loading state
    const submitBtn = document.querySelector('button[onclick="updateUser()"]');
    const btnText = submitBtn.querySelector('.btn-text');
    const btnSpinner = submitBtn.querySelector('.btn-spinner');

    submitBtn.disabled = true;
    btnText.classList.add('d-none');
    btnSpinner.classList.remove('d-none');

    try {
        const response = await fetch('/api/users/' + userId, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(userData)
        });

        const result = await response.json();

        if (response.ok && result.success) {
            showToast('User updated successfully!', 'success');

            // Reset button state
            submitBtn.disabled = false;
            btnText.classList.remove('d-none');
            btnSpinner.classList.add('d-none');

            // Redirect after delay
            setTimeout(() => {
                window.location.href = '/roles/roles-management';
            }, 2000);
        } else {
            const errorMessage = result.message || 'Failed to update user';
            showToast(errorMessage, 'error');

            // Reset button state
            submitBtn.disabled = false;
            btnText.classList.remove('d-none');
            btnSpinner.classList.add('d-none');
        }
    } catch (error) {
        console.error('Error:', error);
        showToast('An error occurred while updating the user', 'error');

        // Reset button state
        submitBtn.disabled = false;
        btnText.classList.remove('d-none');
        btnSpinner.classList.add('d-none');
    }
}

// Phone number validation - Clean and simple
const phoneInput = document.getElementById('phone');

phoneInput.addEventListener('input', function(e) {
    let value = e.target.value;
    // Remove invalid characters (only allow digits, +, -, spaces, parentheses)
    value = value.replace(/[^0-9+\-\s()]/g, '');
    // Strictly limit to 15 characters
    if (value.length > 15) {
        value = value.substring(0, 15);
    }
    e.target.value = value;
});
</script>
