<div class="card h-100 p-0 radius-12">
    <div class="card-header border-bottom bg-base py-16 px-24 d-flex align-items-center justify-content-between">
        <h6 class="text-lg fw-semibold mb-0">Edit User</h6>
        <a href="/roles/roles-management" class="btn btn-outline-primary btn-sm">
            <i class="ri-arrow-left-line me-1"></i> Back to Users
        </a>
    </div>
    <div class="card-body p-24">
        <div class="row justify-content-center">
            <div class="col-xxl-8 col-xl-10 col-lg-12">
                <form id="editUserForm">
                    <input type="hidden" name="userId" value="<%= user._id %>">
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-20">
                                <label for="fullName" class="form-label fw-semibold text-primary-light text-sm mb-8">Full Name <span class="text-danger-600">*</span></label>
                                <input type="text" class="form-control radius-8" id="fullName" name="fullName" value="<%= user.fullName %>" placeholder="Enter Full Name" required>
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-20">
                                <label for="email" class="form-label fw-semibold text-primary-light text-sm mb-8">Email <span class="text-danger-600">*</span></label>
                                <input type="email" class="form-control radius-8" id="email" name="email" value="<%= user.email %>" placeholder="Enter email address" required>
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-20">
                                <label for="phone" class="form-label fw-semibold text-primary-light text-sm mb-8">Phone</label>
                                <input type="tel" class="form-control radius-8" id="phone" name="phone" value="<%= user.phone || '' %>" placeholder="Enter phone number">
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-20">
                                <label for="role" class="form-label fw-semibold text-primary-light text-sm mb-8">Select Role <span class="text-danger-600">*</span></label>
                                <select class="form-control radius-8" id="role" name="role" required>
                                    <option value="">Select Role</option>
                                    <% roles.forEach(role => { %>
                                        <option value="<%= role._id %>" <%= user.role && user.role._id.toString() === role._id.toString() ? 'selected' : '' %>>
                                            <%= role.name %>
                                        </option>
                                    <% }); %>
                                </select>
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                    </div>

                    <div class="mb-20">
                        <label class="form-label fw-semibold text-primary-light text-sm mb-8">User Status</label>
                        <div class="d-flex align-items-center gap-3">
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="isActive" id="statusActive" value="true" <%= user.isActive ? 'checked' : '' %>>
                                <label class="form-check-label" for="statusActive">
                                    <span class="badge bg-success-100 text-success-600 px-3 py-2 rounded-pill">
                                        <i class="ri-check-line me-1"></i> Active
                                    </span>
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="isActive" id="statusInactive" value="false" <%= !user.isActive ? 'checked' : '' %>>
                                <label class="form-check-label" for="statusInactive">
                                    <span class="badge bg-danger-100 text-danger-600 px-3 py-2 rounded-pill">
                                        <i class="ri-close-line me-1"></i> Inactive
                                    </span>
                                </label>
                            </div>
                        </div>
                    </div>

                    <div class="mb-20">
                        <h6 class="text-md text-primary-light mb-16">User Information</h6>
                        <div class="row">
                            <div class="col-md-6">
                                <p class="text-sm text-secondary-light mb-2">
                                    <strong>Created:</strong> <%= new Date(user.createdAt).toLocaleDateString() %>
                                </p>
                                <% if (user.createdBy) { %>
                                    <p class="text-sm text-secondary-light mb-2">
                                        <strong>Created By:</strong> <%= user.createdBy.fullName %>
                                    </p>
                                <% } %>
                            </div>
                            <div class="col-md-6">
                                <p class="text-sm text-secondary-light mb-2">
                                    <strong>Last Updated:</strong> <%= new Date(user.updatedAt).toLocaleDateString() %>
                                </p>
                                <p class="text-sm text-secondary-light mb-2">
                                    <strong>Current Role:</strong> 
                                    <% if (user.role) { %>
                                        <span class="badge bg-primary-100 text-primary-600 px-2 py-1 rounded-pill">
                                            <%= user.role.name %>
                                        </span>
                                    <% } else { %>
                                        <span class="badge bg-secondary-100 text-secondary-600 px-2 py-1 rounded-pill">
                                            No Role
                                        </span>
                                    <% } %>
                                </p>
                            </div>
                        </div>
                    </div>

                    <div class="d-flex align-items-center justify-content-end gap-3 mt-4 pt-3 border-top">
                        <a href="/roles/roles-management" class="btn btn-outline-secondary px-4">
                            <i class="ri-close-line me-1"></i> Cancel
                        </a>
                        <button type="button" class="btn btn-primary-600 radius-8 px-4" onclick="updateUser()">
                            <span class="btn-text">
                                <i class="ri-save-line me-1"></i> Update User
                            </span>
                            <span class="btn-spinner d-none">
                                <span class="spinner-border spinner-border-sm" role="status"></span>
                            </span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- SweetAlert2 CSS and JS -->
<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.32/dist/sweetalert2.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.32/dist/sweetalert2.all.min.js"></script>

<script>
// Professional toast function using SweetAlert2
function showToast(message, type) {
    const Toast = Swal.mixin({
        toast: true,
        position: 'top-end',
        showConfirmButton: false,
        timer: 3000,
        timerProgressBar: true,
        didOpen: (toast) => {
            toast.addEventListener('mouseenter', Swal.stopTimer)
            toast.addEventListener('mouseleave', Swal.resumeTimer)
        }
    });

    let icon = 'info';
    if (type === 'success') icon = 'success';
    else if (type === 'error') icon = 'error';
    else if (type === 'warning') icon = 'warning';

    Toast.fire({
        icon: icon,
        title: message
    });
}

// Update user function
async function updateUser() {
    const form = document.getElementById('editUserForm');
    const formData = new FormData(form);
    
    // Get form values
    const userData = {
        fullName: formData.get('fullName'),
        email: formData.get('email'),
        phone: formData.get('phone'),
        role: formData.get('role'),
        isActive: formData.get('isActive') === 'true'
    };
    
    const userId = formData.get('userId');
    
    // Basic validation
    if (!userData.fullName || userData.fullName.trim().length < 2) {
        showToast('Full name must be at least 2 characters long', 'error');
        return;
    }
    
    if (!userData.email || !userData.email.includes('@')) {
        showToast('Please enter a valid email address', 'error');
        return;
    }
    
    if (!userData.role) {
        showToast('Please select a role', 'error');
        return;
    }
    
    // Show loading state
    const submitBtn = document.querySelector('button[onclick="updateUser()"]');
    const btnText = submitBtn.querySelector('.btn-text');
    const btnSpinner = submitBtn.querySelector('.btn-spinner');
    
    submitBtn.disabled = true;
    btnText.classList.add('d-none');
    btnSpinner.classList.remove('d-none');
    
    try {
        const response = await fetch('/api/users/' + userId, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(userData)
        });
        
        const result = await response.json();
        
        if (response.ok && result.success) {
            showToast('User updated successfully!', 'success');
            
            // Reset button state
            submitBtn.disabled = false;
            btnText.classList.remove('d-none');
            btnSpinner.classList.add('d-none');
            
            // Redirect after delay
            setTimeout(() => {
                window.location.href = '/roles/roles-management';
            }, 2000);
        } else {
            const errorMessage = result.message || 'Failed to update user';
            showToast(errorMessage, 'error');
            
            // Reset button state
            submitBtn.disabled = false;
            btnText.classList.remove('d-none');
            btnSpinner.classList.add('d-none');
        }
    } catch (error) {
        console.error('Error:', error);
        showToast('An error occurred while updating the user', 'error');
        
        // Reset button state
        submitBtn.disabled = false;
        btnText.classList.remove('d-none');
        btnSpinner.classList.add('d-none');
    }
}
</script>
