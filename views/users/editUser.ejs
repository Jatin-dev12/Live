<div class="card p-0 radius-12">
    <div class="card-header border-bottom bg-base py-16 px-24 d-flex align-items-center justify-content-between">
        <h6 class="text-lg fw-semibold mb-0">Edit User</h6>
        <a href="/roles/roles-management" class="btn btn-outline-primary btn-sm">
            <i class="ri-arrow-left-line me-1"></i> Back to Users
        </a>
    </div>
    <div class="card-body p-24">
        <div class="row ">
            <div class="col-lg-12">
                <form id="editUserForm">
                    <input type="hidden" name="userId" value="<%= user._id %>">

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-20">
                                <label for="fullName" class="form-label fw-semibold text-primary-light text-sm mb-8">Full Name <span class="text-danger-600">*</span></label>
                                <input type="text" class="form-control radius-8" id="fullName" name="fullName" value="<%= user.fullName %>" placeholder="Enter Full Name" required>
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-20">
                                <label for="email" class="form-label fw-semibold text-primary-light text-sm mb-8">Email <span class="text-danger-600">*</span></label>
                                <input type="email" class="form-control radius-8" id="email" name="email" value="<%= user.email %>" placeholder="Enter email address" required>
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-20">
                                <label for="phone" class="form-label fw-semibold text-primary-light text-sm mb-8">Phone</label>
                                <input type="tel" class="form-control radius-8" id="phone" name="phone" value="<%= user.phone || '' %>" placeholder="Enter phone number">
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-20">
                                <label for="role" class="form-label fw-semibold text-primary-light text-sm mb-8">Select Role <span class="text-danger-600">*</span></label>
                                <select class="form-control radius-8" id="role" name="role" required>
                                    <option value="">Select Role</option>
                                    <% roles.forEach(role => { %>
                                        <option value="<%= role._id %>" <%= user.role && user.role._id.toString() === role._id.toString() ? 'selected' : '' %>>
                                            <%= role.name %>
                                        </option>
                                    <% }); %>
                                </select>
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                    </div>

                    <div class="mb-20">

                            <label class="form-label fw-semibold text-primary-light text-sm mb-8">User Status</label>
                            <div class="d-flex align-items-center gap-3">
                                <div class="form-check custom-form-check">
                                    <input class="form-check-input" type="radio" name="isActive" id="statusActive" value="true" <%= user.isActive ? 'checked' : '' %>>
                                    <label class="form-check-label" for="statusActive">
                                        <span class="">
                                            <!-- <i class="ri-check-line me-1"></i>  -->
                                            Active
                                        </span>
                                    </label>
                                </div>
                                <div class="form-check custom-form-check">
                                    <input class="form-check-input" type="radio" name="isActive" id="statusInactive" value="false" <%= !user.isActive ? 'checked' : '' %>>
                                    <label class="form-check-label" for="statusInactive">
                                        <span class="">
                                            <!-- <i class="ri-close-line me-1"></i>  -->
                                            Inactive
                                        </span>
                                    </label>
                                </div>
                            </div>

                    </div>

                    <div class="mb-20">
                        <div class="user-info-box">
                        <h6 class="text-md text-primary-light mb-16">User Information</h6>
                        <div class="row">
                            <div class="col-md-6">
                                <p class="text-sm text-secondary-light mb-2">
                                    <strong>Created:</strong> <%= new Date(user.createdAt).toLocaleDateString() %>
                                </p>
                                <% if (user.createdBy) { %>
                                    <p class="text-sm text-secondary-light mb-2">
                                        <strong>Created By:</strong> <%= user.createdBy.fullName %>
                                    </p>
                                <% } %>
                            </div>
                            <div class="col-md-6">
                                <p class="text-sm text-secondary-light mb-2">
                                    <strong>Last Updated:</strong> <%= new Date(user.updatedAt).toLocaleDateString() %>
                                </p>
                                <p class="text-sm text-secondary-light mb-2">
                                    <strong>Current Role:</strong>
                                    <% if (user.role) { %>
                                        <span class="">
                                            <%= user.role.name %>
                                        </span>
                                    <% } else { %>
                                        <span class="">
                                            No Role
                                        </span>
                                    <% } %>
                                </p>
                            </div>
                        </div>
                        </div>
                    </div>

                    <div class="d-flex align-items-center justify-content-end gap-3 mt-4 pt-3 border-top">
                        <a href="/roles/roles-management" class="btn btn-sm btn-outline-secondary">
                            <!-- <i class="ri-close-line me-1"></i>  -->
                            Cancel
                        </a>
                        <button type="button" class="btn btn-sm btn-primary-600 " onclick="updateUser()">
                            <span class="btn-text">
                                <!-- <i class="ri-save-line me-1"></i>  -->
                                Update User
                            </span>
                            <span class="btn-spinner d-none">
                                <span class="spinner-border spinner-border-sm" role="status"></span>
                            </span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- SweetAlert2 CSS and JS -->
<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.32/dist/sweetalert2.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.32/dist/sweetalert2.all.min.js"></script>

<script>
// Custom toast notification function
function showToast(message, type = 'info') {
    // Remove any existing toasts first
    const existingToasts = document.querySelectorAll('.custom-toast');
    existingToasts.forEach(toast => toast.remove());

    // Create toast element
    const toast = document.createElement('div');
    const alertType = type === 'error' ? 'danger' : type === 'success' ? 'success' : 'info';
    toast.className = 'alert alert-' + alertType + ' position-fixed shadow-lg custom-toast';
    toast.style.cssText = 'top: 80px; right: 20px; z-index: 999999; min-width: 400px; max-width: 600px; border-radius: 12px; font-size: 16px; padding: 20px; border: 2px solid;';

    // Set border color based on type
    if (type === 'success') {
        toast.style.borderColor = '#28a745';
        toast.style.backgroundColor = '#d4edda';
        toast.style.color = '#155724';
    } else if (type === 'error') {
        toast.style.borderColor = '#dc3545';
        toast.style.backgroundColor = '#f8d7da';
        toast.style.color = '#721c24';
    }

    const iconEmoji = type === 'error' ? '❌' : type === 'success' ? '✅' : 'ℹ️';
    toast.innerHTML = '<div class="d-flex align-items-center">' +
        '<span style="font-size: 24px; margin-right: 12px;">' + iconEmoji + '</span>' +
        '<span style="font-weight: 600; flex-grow: 1;">' + message + '</span>' +
        '<button type="button" style="background: none; border: none; font-size: 20px; cursor: pointer; margin-left: 10px;" onclick="this.parentElement.parentElement.remove()">×</button>' +
        '</div>';

    document.body.appendChild(toast);

    // Add entrance animation
    toast.style.transform = 'translateX(100%)';
    toast.style.transition = 'transform 0.3s ease-out';
    setTimeout(() => {
        toast.style.transform = 'translateX(0)';
    }, 10);

    // Auto remove after duration based on type
    const duration = type === 'success' ? 4000 : 6000;
    setTimeout(() => {
        if (toast.parentElement) {
            toast.style.transform = 'translateX(100%)';
            setTimeout(() => toast.remove(), 300);
        }
    }, duration);
}

// Update user function
async function updateUser() {
    const form = document.getElementById('editUserForm');
    const formData = new FormData(form);

    // Get form values
    const userData = {
        fullName: formData.get('fullName'),
        email: formData.get('email'),
        phone: formData.get('phone'),
        role: formData.get('role'),
        isActive: formData.get('isActive') === 'true'
    };

    const userId = formData.get('userId');

    // Basic validation
    if (!userData.fullName || userData.fullName.trim().length < 2) {
        showToast('Full name must be at least 2 characters long', 'error');
        return;
    }

    if (!userData.email || !userData.email.includes('@')) {
        showToast('Please enter a valid email address', 'error');
        return;
    }

    if (!userData.role) {
        showToast('Please select a role', 'error');
        return;
    }

    // Show loading state
    const submitBtn = document.querySelector('button[onclick="updateUser()"]');
    const btnText = submitBtn.querySelector('.btn-text');
    const btnSpinner = submitBtn.querySelector('.btn-spinner');

    submitBtn.disabled = true;
    btnText.classList.add('d-none');
    btnSpinner.classList.remove('d-none');

    try {
        const response = await fetch('/api/users/' + userId, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(userData)
        });

        const result = await response.json();

        if (response.ok && result.success) {
            showToast('User updated successfully!', 'success');

            // Reset button state
            submitBtn.disabled = false;
            btnText.classList.remove('d-none');
            btnSpinner.classList.add('d-none');

            // Redirect after delay
            setTimeout(() => {
                window.location.href = '/roles/roles-management';
            }, 2000);
        } else {
            const errorMessage = result.message || 'Failed to update user';
            showToast(errorMessage, 'error');

            // Reset button state
            submitBtn.disabled = false;
            btnText.classList.remove('d-none');
            btnSpinner.classList.add('d-none');
        }
    } catch (error) {
        console.error('Error:', error);
        showToast('An error occurred while updating the user', 'error');

        // Reset button state
        submitBtn.disabled = false;
        btnText.classList.remove('d-none');
        btnSpinner.classList.add('d-none');
    }
}
</script>
