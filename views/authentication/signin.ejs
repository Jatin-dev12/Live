<section class="form-auth bg-basee d-flex align-items-center justify-content-center min-vh-100">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-12 col-sm-10 col-md-8 col-lg-6 col-xl-5">
                <div class="sign-form">
                        <div class="sign-form-logo">
                                <img src="/images/logo.png" alt="">
                            </a>
                            <h4 class="mb-12">Sign In to your Account</h4>
                            <!-- <p class="mb-32 text-secondary-light text-lg">Welcome ! please enter your detail</p> -->
                        </div>
                        <form id="loginForm" autocomplete="off">
                            <div id="errorMessage" class="alert alert-danger d-none mb-16" role="alert"></div>
                            <div class="icon-field mb-16">
                                <span class="icon top-50 translate-middle-y">
                                    <iconify-icon icon="mage:email"></iconify-icon>
                                </span>
                                <input type="email" class="form-control h-56-px bg-neutral-50 radius-12" id="email" name="email" placeholder="Email" required autocomplete="off" data-form-type="other">
                            </div>
                            <div class="position-relative mb-20">
                                <div class="icon-field">
                                    <span class="icon top-50 translate-middle-y">
                                        <iconify-icon icon="solar:lock-password-outline"></iconify-icon>
                                    </span>
                                    <input type="password" class="form-control h-56-px bg-neutral-50 radius-12" id="your-password" name="password" placeholder="Password" required autocomplete="new-password" data-form-type="other" data-lpignore="true" data-form-type="other" autocorrect="off" autocapitalize="off" spellcheck="false">
                                </div>
                                <span class="toggle-password ri-eye-line cursor-pointer position-absolute end-0 top-50 translate-middle-y me-16 text-secondary-light" data-toggle="#your-password"></span>
                            </div>
                            <div class="">
                                <div class="d-flex justify-content-between gap-2">
                                    <div class="form-check style-check d-flex align-items-center">
                                        <input class="form-check-input border border-neutral-300" type="checkbox" value="" id="remeber">
                                        <label class="form-check-label" for="remeber">Remember me </label>
                                    </div>
                                    <!-- <a href="/authentication/forgot-password" class="text-primary-600 fw-medium">Forgot Password?</a> -->
                                </div>
                            </div>

                            <button type="submit" class="btn btn-primary text-sm btn-sm px-12 py-16 w-100 radius-12 mt-32" id="loginBtn">
                                <span class="btn-text">Sign In</span>
                                <span class="btn-spinner d-none">
                                    <span class="spinner-border spinner-border-sm" role="status"></span>
                                </span>
                            </button>

                        </form>
                </div>
            </div>
        </div>
    </div>
</section>
<% script = `

<script>
    // ================== Password Show Hide Js Start ==========
    function initializePasswordToggle(toggleSelector) {
        $(toggleSelector).on('click', function() {
            $(this).toggleClass('ri-eye-off-line');
            var input = $($(this).attr('data-toggle'));
            if (input.attr('type') === 'password') {
                input.attr('type', 'text');
            } else {
                input.attr('type', 'password');
            }
        });
    }
    // Call the function
    initializePasswordToggle('.toggle-password');
    // ========================= Password Show Hide Js End ===========================

    // ================== Emoji and Special Character Validation Start ==========
    function containsEmojisOrSpecialUnicode(str) {
        // Regex to detect emojis and special Unicode characters
        const emojiRegex = /[\u{1F600}-\u{1F64F}\u{1F300}-\u{1F5FF}\u{1F680}-\u{1F6FF}\u{1F1E0}-\u{1F1FF}\u{2600}-\u{26FF}\u{2700}-\u{27BF}\u{1F900}-\u{1F9FF}\u{1FA00}-\u{1FA6F}\u{1FA70}-\u{1FAFF}\u{FE00}-\u{FE0F}\u{1F018}-\u{1F270}\u{238C}-\u{2454}\u{20D0}-\u{20FF}]/u;
        return emojiRegex.test(str);
    }

    function validateInput(input) {
        const value = input.value;
        if (containsEmojisOrSpecialUnicode(value)) {
            // Remove emojis and special characters
            input.value = value.replace(/[\u{1F600}-\u{1F64F}\u{1F300}-\u{1F5FF}\u{1F680}-\u{1F6FF}\u{1F1E0}-\u{1F1FF}\u{2600}-\u{26FF}\u{2700}-\u{27BF}\u{1F900}-\u{1F9FF}\u{1FA00}-\u{1FA6F}\u{1FA70}-\u{1FAFF}\u{FE00}-\u{FE0F}\u{1F018}-\u{1F270}\u{238C}-\u{2454}\u{20D0}-\u{20FF}]/gu, '');
            showToast('Please enter characters, numbers, or standard special characters only. Emojis are not allowed.', 'error');
        }
    }

    // Prevent autofill by removing readonly on focus
    const emailInput = document.getElementById('email');
    const passwordInput = document.getElementById('your-password');
    const rememberCheckbox = document.getElementById('remeber');

    // Load saved credentials ONLY if "Remember Me" was checked
    window.addEventListener('DOMContentLoaded', function() {
        const rememberMe = localStorage.getItem('rememberMe') === 'true';

        // Set readonly initially to prevent browser autofill
        emailInput.setAttribute('readonly', 'readonly');
        passwordInput.setAttribute('readonly', 'readonly');

        // Only auto-fill if user explicitly checked "Remember Me" before
        if (rememberMe) {
            const savedEmail = localStorage.getItem('rememberedEmail');
            const savedPassword = localStorage.getItem('rememberedPassword');

            if (savedEmail && savedPassword) {
                // Remove readonly temporarily to set values
                setTimeout(() => {
                    emailInput.removeAttribute('readonly');
                    passwordInput.removeAttribute('readonly');

                    emailInput.value = savedEmail;
                    passwordInput.value = savedPassword;
                    rememberCheckbox.checked = true;

                    // Set readonly back
                    setTimeout(() => {
                        emailInput.setAttribute('readonly', 'readonly');
                        passwordInput.setAttribute('readonly', 'readonly');
                    }, 50);
                }, 100);
            }
        }
        // If rememberMe is false or not set, fields remain empty (no autofill)
    });

    // Remove readonly on focus
    emailInput.addEventListener('focus', function() {
        this.removeAttribute('readonly');
    });

    passwordInput.addEventListener('focus', function() {
        this.removeAttribute('readonly');
    });

    // Add input validation for email and password fields
    emailInput.addEventListener('input', function() {
        validateInput(this);
    });

    passwordInput.addEventListener('input', function() {
        validateInput(this);
    });

    // Handle Remember Me checkbox change
    rememberCheckbox.addEventListener('change', function() {
        if (!this.checked) {
            // Clear saved credentials when unchecked
            localStorage.removeItem('rememberedEmail');
            localStorage.removeItem('rememberedPassword');
            localStorage.removeItem('rememberMe');
        }
    });

    // Toast notification function
    function showToast(message, type = 'info') {
        // Remove any existing toasts first
        const existingToasts = document.querySelectorAll('.custom-toast');
        existingToasts.forEach(toast => toast.remove());

        // Create toast element
        const toast = document.createElement('div');
        const alertType = type === 'error' ? 'danger' : type === 'success' ? 'success' : 'info';
        toast.className = 'alert alert-' + alertType + ' position-fixed shadow-lg custom-toast';
        toast.style.cssText = 'top: 80px; right: 20px; z-index: 999999; min-width: 400px; max-width: 600px; border-radius: 12px; font-size: 16px; padding: 20px; border: 2px solid;';

        // Set border color based on type
        if (type === 'success') {
            toast.style.borderColor = '#28a745';
            toast.style.backgroundColor = '#d4edda';
            toast.style.color = '#155724';
        } else if (type === 'error') {
            toast.style.borderColor = '#dc3545';
            toast.style.backgroundColor = '#f8d7da';
            toast.style.color = '#721c24';
        }

        const iconEmoji = type === 'error' ? '❌' : type === 'success' ? '✅' : 'ℹ️';
        toast.innerHTML = '<div class="d-flex align-items-center">' +
            '<span style="font-size: 24px; margin-right: 12px;">' + iconEmoji + '</span>' +
            '<span style="font-weight: 600; flex-grow: 1;">' + message + '</span>' +
            '<button type="button" style="background: none; border: none; font-size: 20px; cursor: pointer; margin-left: 10px;" onclick="this.parentElement.parentElement.remove()">×</button>' +
            '</div>';

        document.body.appendChild(toast);

        // Add entrance animation
        toast.style.transform = 'translateX(100%)';
        toast.style.transition = 'transform 0.3s ease-out';
        setTimeout(() => {
            toast.style.transform = 'translateX(0)';
        }, 10);

        // Auto remove after duration based on type
        const duration = type === 'success' ? 4000 : 6000;
        setTimeout(() => {
            if (toast.parentElement) {
                toast.style.transform = 'translateX(100%)';
                setTimeout(() => toast.remove(), 300);
            }
        }, duration);
    }
    // ========================= Emoji and Special Character Validation End ===========================

    // ================== Login Form Submission Start ==========
    document.getElementById('loginForm').addEventListener('submit', async function(e) {
        e.preventDefault();

        const email = document.getElementById('email').value;
        const password = document.getElementById('your-password').value;
        const errorMessage = document.getElementById('errorMessage');
        const loginBtn = document.getElementById('loginBtn');
        const btnText = loginBtn.querySelector('.btn-text');
        const btnSpinner = loginBtn.querySelector('.btn-spinner');

        // Hide error message
        errorMessage.classList.add('d-none');

        // Show loading state
        loginBtn.disabled = true;
        btnText.classList.add('d-none');
        btnSpinner.classList.remove('d-none');

        try {
            const response = await fetch('/api/auth/login', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ email, password })
            });

            const result = await response.json();

            if (response.ok && result.success) {
                // Handle Remember Me functionality
                const rememberMe = document.getElementById('remeber').checked;
                if (rememberMe) {
                    // Save credentials to localStorage
                    localStorage.setItem('rememberedEmail', email);
                    localStorage.setItem('rememberedPassword', password);
                    localStorage.setItem('rememberMe', 'true');
                } else {
                    // Clear saved credentials
                    localStorage.removeItem('rememberedEmail');
                    localStorage.removeItem('rememberedPassword');
                    localStorage.removeItem('rememberMe');
                }

                // Redirect to dashboard or specified URL
                window.location.href = result.data.redirectUrl || '/index';
            } else {
                // Show error message
                errorMessage.textContent = result.message || 'Login failed. Please check your credentials.';
                errorMessage.classList.remove('d-none');

                // Reset button state
                loginBtn.disabled = false;
                btnText.classList.remove('d-none');
                btnSpinner.classList.add('d-none');
            }
        } catch (error) {
            console.error('Login error:', error);
            errorMessage.textContent = 'An error occurred. Please try again.';
            errorMessage.classList.remove('d-none');

            // Reset button state
            loginBtn.disabled = false;
            btnText.classList.remove('d-none');
            btnSpinner.classList.add('d-none');
        }
    });
    // ========================= Login Form Submission End ===========================
</script>
` %>